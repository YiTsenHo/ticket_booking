server {
    listen 80;
    server_name yourwebsite.com www.yourwebsite.com;
    
    # 將 HTTP 重定向到 HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name yourwebsite.com www.yourwebsite.com;
    
    # SSL 配置
    ssl_certificate /etc/letsencrypt/live/yourwebsite.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourwebsite.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/yourwebsite.com/chain.pem;
    
    # 啟用更安全的 SSL 協議和密碼
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    
    # 啟用 OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # 啟用 HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 其他安全頭
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 防止隱私信息洩露
    server_tokens off;
    
    # 靜態文件配置
    location /static/ {
        alias /path/to/your/project/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    location /media/ {
        alias /path/to/your/project/media/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # 防止直接訪問敏感文件
    location ~ /\.git {
        deny all;
    }
    
    location ~ \.py$ {
        deny all;
    }
    
    location = /favicon.ico { 
        alias /path/to/your/project/staticfiles/favicon.ico;
        access_log off; 
        log_not_found off; 
    }
    
    # 限制上傳大小
    client_max_body_size 10M;
    
    # 主應用代理配置
    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # 設置代理超時
        proxy_connect_timeout 75s;
        proxy_read_timeout 300s;
        
        # 防止 DDoS
        limit_req zone=one burst=5;
        
        proxy_pass http://unix:/path/to/your/project/project.sock;
    }
    
    # 訪問和錯誤日誌配置
    access_log /var/log/nginx/yourwebsite.com.access.log;
    error_log /var/log/nginx/yourwebsite.com.error.log;
}

# 創建一個限制請求頻率的區域
limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
